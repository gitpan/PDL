=head1 NAME

PDL::Objects -- Object-Orientation, what is it how to exploit it

=head1 DESCRIPTION

This still needs to be written properly.

=head2 Inheritance

There are basically two reasons for subclassing piddles.
The first is simply that you want to be able to use your own routines
like

	$piddle->something()

but don't want to mess up the PDL namespace (a worthy goal, indeed!).
The other is that you wish to provide special handling of some functions
or more information about the data the piddle contains.
In the first case, you can do with

	package BAR;
	@ISA=qw/PDL/;
	sub foo {my($this) = @_; fiddle;}

	package main;
	$a = PDL::pdl(BAR,5);
	$a->foo();

However, because a PDL object is an opaque reference to a C struct,
it is not possible to
extend the PDL class by e.g. extra data via subclassing.
To circumvent this problem
PerlDL has built-in support to extent the PDL class via the I<has-a>
relation for blessed hashes.  You can get the I<HAS-A> behave like
I<IS-A> simply in that you assign the C<PDL> object to the attribute
named PDL and redefine the method initialize().

    package FOO;

    @FOO::ISA = qw(PDL);
    sub initialize {
        my $class = shift;
        my $self = {
                creation_time => time(),  # necessary extension :-)
                PDL => null,             # used to store PDL object
                };
        bless $self, $class;
    }

All PDL constructor will call initialize() to make sure that your
extentions are added by I<all> PDL constructors automaticly.   The
C<PDL> attribute is used by perlDL to store the PDL object and
all PDL methods use this attribute automaticly if they are called
with a blessed hash reference instead of a PDL object (a blessed scalar).

Do remember that if you subclass a class that is subclassed from a piddle,
you need to call SUPER::initialize.


NEED STUFF ABOUT CODE REFs!!

=head1 AUTHOR

Copyright (C) Karl Glazebrook (kgb@aaoepp.aao.gov.au), Tuomas J. Lukka,
(lukka@husc.harvard.edu) and Christian Soeller (csoelle@sghms.ac.uk) 1997.
Commercial reproduction of this documentation in a different format is forbidden.

=cut

