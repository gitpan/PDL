The following issues have been reported with this version of PDL:

- The current Ctrl-C logic in the PDL shells (pdl2 and perldl)
  don't work the same with the perl's new "safe signals".  A
  workaround to the problem is to set the PERL_SIGNALS environment
  variable to "unsafe".  See sf.net feature request #3308168
  for details and any future status.


- The PDL build process checks for white space in the build
  directory as that is known to cause problems for some modules
  and asks you if you wish to continue [default is yes].

  NOTE: You can avoid the interactive prompts by setting the
  environment variable PERL_MM_USE_DEFAULT to true (e.g., 1).


- The Perl debugger for perls 5.10.1 through 5.14.x has a new
  "feature" leading to false fails for lvalue subroutines when
  run under the debugger.  If you need to debug such code with
  an affected perl version, the work around is to use an
  intermediate temporary variable assignment as in:

    $piddle->slice('0:10') .= 100;           # original slice code
    ($tmp = $piddle->slice('0:10')) .= 100;  # work around perl -d "feature"

  The problem is understood and it appears that the error has
  been replaced by a warning for perl-5.15.1.  NOTE: the work-
  around is 100% effective---but ugly.


- Multiline q'' constructs in the pdl2 shell now work correctly
  but you'll need to avoid using the q abbreviation for quit
  in pdl2 (at least until the multiline plugin in Devel::REPL
  can be updated appropriately).  If you do get "stuck" in a q
  quit attempt, just type Ctrl-D to exit the shell.


- The demo 3d and 3d2 windows do not close (can not be closed)
  after the demo finishes.  You need to exit the perldl shell
  to have the window close.


- When you close a TriD graphics window with the frame widget
  the whole process exits including the perldl shell.


- PDL::FFTW is based on version 2 of the FFTW API.  The current
  release of the FFTW library is version 3.2.2.  To use PDL::FFTW
  you will need to install FFTW version 2.1.5, use the built-in 
  PDL::FFT routines instead, or (better yet) submit a patch to
  update PDL::FFTW to the version 3 API. 


- Extremely verbose but not particularly helpful text output from
  the configure-build-test process.


- Directory completion in the interactive PDL shells (perldl and pdl2)
  using Term::ReadLine::Perl adds a space after each directory expansion.
  To continue to complete, one must delete the space before typing <TAB>
  again.  The problem has been reported as a Term::ReadLine::Perl bug.


- PDL on Cygwin has (by default) a 300MB process memory limit which can
  cause out of memory crashes with large data sets.  See the cygwin users
  guide: http://www.cygwin.com/cygwin-ug-net/setup-maxmem.html for how
  to increase the memory limit.


- minimum/maximum/min/max inconsistently handle NaN values.
  NaN's for the first element of a pdl will propagate to the
  result while if the first element is a number, then the
  result will be a number.  The answer for max/min should not
  depend on the order of the input values.


- 16-bit image IO via rpic/wpic and rim/wim do not correctly
  handle byte order issues.  The intermediate PNM data piped
  through the converter programs is not adjusted to network
  byte order per the NetPBM convention/standard.  This is not
  an issue for big-endian systems or for 8-bit/chanel image
  data.


- The following SourceForge bugs are outstanding at time of the
  PDL-2.4.9_016 release:

  3462924    bogus "dimension mismatch" for Nx0 index piddles
  3460886    t/flexraw_fortran.t test failures

               Candidate fix in this release.

  3363406    PDL::Minuit build can't make libminuit.a

               Candidate fix in this release.

  3316394    'help funname' fails to show multiple function names
  3314708    PDL install does not install scantree.pl
  3299615    PLplot still unusable with X
  3234141    max() fails on nan
  3161459    online docs don't link to functions in other PDL modules 
  3018731    NiceSlice affects code where it should not

               Support for new and improved NiceSlice engine
	       works for files.  See Release_notes for details.
	       Implementation for interactive shells is TBD.

  2995500    perl -d chokes on lvalue functions
  2153898    default PDL build output too long
  1994584    PDL Has no signed 8-bit integer data type
  1507054    closing TriD window kills perldl shell
  1205359    PGPLOT Window does not store full state info


For more information on these and other PDL issues, and for
submissions of patches (bug patches are always welcome!), 
see the PDL mailing lists. Links to archive list discussions
and how to register for the mailing lists can be found at
http://pdl.sourceforge.net/maillists/ .
