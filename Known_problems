The following issues have been reported with this version of PDL:

- The Perl debugger for perls 5.10.1 through 5.12 has a new
  "feature" leading to false fails for lvalue subroutines when
  run under the debugger.  If you need to debug such code with
  an affected perl version, the work around is to make an
  explicit temp as in:

    $piddle->slice('0:10') .= 100;

  becomes

    my $tmp; # work around perl -d "feature"
    ($tmp = $piddle->slice('0:10')) .= 100;

  The problem is understood and it is hoped that an official
  fix will become available soon.  NOTE: the work around is
  100% effective---but ugly.


- On Strawberry Perl and ActiveState Perl: the pdl2 fallback to
  perldl is broken due to win32 issues.  If you don't have
  Devel::REPL you'll need to run perldl directly.  pdl2 will
  warn you if you try to run it with those perls.


- The demo 3d and 3d2 windows do not close (can not be closed)
  after the demo finishes.  You need to exit the perldl shell
  to have the window close.


- When you close a TriD graphics window with the frame widget
  the whole process exits including the perldl shell.


- PDL::FFTW is based on version 2 of the FFTW API.  The current
  release of the FFTW library is version 3.2.2.  To use PDL::FFTW
  you will need to install FFTW version 2.1.5, use the built-in 
  PDL::FFT routines instead, or (better yet) submit a patch to
  update PDL::FFTW to the version 3 API. 


- If you have a pre-existing PDL install in your perl @INC path,
  mysterious failures have been observed in some tests due to
  unintentionally pulling in a previous version of PDL.  The
  'perl Makefile.PL' stage now checks for this and asks if you
  wish to continue.
  
  *Usually* continuing with another PDL in the path will work
  BUT if you get mysterious test failures, try removing the
  previous PDL install files and build again.


- Various make command issues during build:

  - Using parallel make causes the build to fail; so don't use -j # options.

  - make fails with message like.
      "*** No rule to make target `pptemplate', needed by `pptemplate.pod'.  Stop."
    The cause is unknown.  If you have this problem, *please* let the developers
    know via the perldl mailing list.


- Extremely verbose but not particularly helpful text output from
  the configure-build-test process.


- Directory completion in the interactive PDL shells (perldl and pdl2)
  using Term::ReadLine::Perl adds a space after each directory expansion.
  To continue to complete, one must delete the space before typing <TAB>
  again.  The problem has been reported as a Term::ReadLine::Perl bug.


- PDL on Cygwin has (by default) a 300MB process memory limit which can
  cause out of memory crashes with large data sets.


- The following SourceForge bugs are outstanding at time of the
  PDL-2.4.7_006 release:

  3080505    PLplot segfaults on plshades call on OS X
  3059083    Problems with FITS header handling
  3056142    pdl2 fallback to perldl broken on win32
  3018731    NiceSlice affects code where it should not
  2995500    perl -d chokes on lvalue functions
  2153898    default PDL build output too long
  1994584    PDL Has no signed 8-bit integer data type
  1507054    closing TriD window kills perldl shell
  1435189    Installation with cpan2rpm
  1205359    PGPLOT Window does not store full state info


For more information on these and other PDL issues, and for
submissions of patches (bug patches are always welcome!), 
see the PDL mailing lists. Links to archive list discussions
and how to register for the mailing lists can be found at
http://pdl.sourceforge.net/maillists/ .
