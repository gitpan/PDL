Installing on Win32
-------------------

To install via ppm:

First up install Astro::FITS::Header by running: 
  ppm install Astro-FITS-Header

Then install the PGPLOT and PDL modules from the uwinnipeg rep by running:
For perl 5.8: 
  ppm install http://theoryx5.uwinnipeg.ca/ppms/PGPLOT.ppd
  ppm install http://theoryx5.uwinnipeg.ca/ppms/PDL.ppd
Or for perl 5.10: 
  ppm install http://cpan.uwinnipeg.ca/PPMPackages/10xx/PGPLOT.ppd
  ppm install http://cpan.uwinnipeg.ca/PPMPackages/10xx/PDL.ppd

(Note that PGPLOT is not available as a ppm from the ActiveState rep, and 
that the ActiveState ppm for PDL lacks some of the functionality that is
available in the PDL ppm package from uwinnipeg.)

If you would like, instead, to build PDL from source, that's also dead easy !!

First up - if you don't want to accept a "default" build of PDL, edit (the
self-documenting) perldl.conf accordingly. You'll find that file in the top
level folder.

Certain parts of PDL can't be built without a fortran compiler. In the docs
that follow I call these parts (somewhat loosely) "the fortran stuff".

Where I refer to "MinGW", I'm referring to version 3.4.x. The 4.x.x builds
are probably unsatisfactory - they're *definitely* unsatisfactory as regards
the fortran compiler (gfortran.exe) that they provide.

To Build with MinGW compiler (on both MinGW-built and MSVC-built perl)
----------------------------------------------------------------------

1) You can get MinGW from http://www.mingw.org. Simplest way to install
   is to download the latest MinGW '.exe' from the Download page, and
   then run the downloaded executable to install MinGW into the location
   of your choice. Then make sure that the MinGW/bin location has been
   added to your path.

2) If (and only if) 'perl -V:cc' still reports 'cl', then install ExtUtils::FakeConfig.

3) If (and only if) you installed ExtUtils::FakeConfig run:
    set perl5opt=-MConfig_m
   Note that with ActivePerl builds dating from around Jan 2008 and later, steps 2) and
   3) should be unnecessary.

4) If you want to build PDL with "the fortran stuff", install ExtUtils::F77-1.15
   (or later) from CPAN.

5) 'cd' to the top level PDL source directory and run, in succession:
    perl Makefile.PL
    make test
    make install
    (Instead of 'make', specify whatever it is that 'perl -V:make' reports - which,
    it's assumed, will be either 'nmake' or 'dmake'. I prefer 'dmake', which is freely
    available from CPAN. But 'nmake' is probably ok, too - unless it's an old version.)



To Build with MSVC compiler (MSVC-built perl only)
--------------------------------------------------

 The capability of building "the fortran stuff" with f2c and associated
 libraries libi77.lib and libf77.lib probably still exists.
 If you want to use f2c you need to edit win32/win32f77.pl to
 reflect the location of f2c, the libs and the include file f2c.h.
 You'll also need to run:
    perl Makefile.PL F77CONF=win32/win32f77.pl
 instead of simply:
    perl Makefile.PL

 However, the instructions that follow assume that "the fortran stuff" is
 being built by MinGW's fortran compiler (g77.exe):

1) If you want "the fortran stuff" you need to install MinGW - this is for the g77.exe
   fortran compiler and libs. (See the preceding section for the link to MinGW.)
   You also need to install ExtUtils::F77-1.15 (or later) from CPAN.
   If you're not interested in "the fortran stuff", then there's no need to install either
   ExtUtils::F77 or MinGW.

2) 'cd' to the top level PDL source directory and run, in succession:
    perl Makefile.PL
    nmake test
    nmake install
