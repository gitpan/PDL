Created on: Thu 10 Dec 2009 10:32:58 PM
Last saved: Fri 13 Aug 2010 06:17:01 PM


+-----------------------------------------------------------+
|                OS/Platforms supported: ALL                |
+-----------------------------------------------------------+

This directory contains development efforts for a new and
improved perldl shell (Perldl2) that can integrate with
the Padre IDE to support PDL development.

You need to install the version 1.003011 of Devel::REPL
in order to use the new Perldl2 shell capabilities.  A
description of the files in this directory and how to
install and use the Perldl2 shell follows.


+-----------------------------------------------------------+
|                         CONTENTS                          |
+-----------------------------------------------------------+

 README
   This file

 TODO
   Development list for Perldl2 shell

 Makefile.PL
   Perl configuration/build script for Perldl2

 Plugin/
 Profile/
 Script.pm
   Perl modules and directories with modules for Perldl2

 pdl2
   A perl script for starting the Perldl2 shell.
   (Calls perldl if Devel::REPL is not installed)




+-----------------------------------------------------------+
|                      INSTALLATION                         |
+-----------------------------------------------------------+

  By default, the Perldl2 shell is always built and the
  pdl2 script installed.  To disable this, edit the
  WITH_DEVEL_REPL option in the perldl.conf file.

  You will need to install Devel::REPL version 1.003011
  or greater to access the new pdl2 capabilities.
 

+-----------------------------------------------------------+
|                           USE                             |
+-----------------------------------------------------------+

  To use the Perldl2 shell, from the PDL build directory
  run the following:

    perl -Mblib Perldl2/pdl2

  If you have installed the just built PDL, you should
  be able to run:

    pdl2

  To exit the Perldl2 shell from the 'pdl> ' prompt, type
  Ctrl-D or quit, (q, x, and exit shortcuts are also
  available).  If Devel::REPL is not installed, pdl2
  will use perldl instead but the new functionality will
  not be available.


+-----------------------------------------------------------+
|                          NOTES                            |
+-----------------------------------------------------------+

 Supported functionality from Devel::REPL and PDL:
  * DDS (pretty prints output using Data::Dump::Streamer)
  * History (redo commands with !-1 and !<num> syntax)
  * Interrupt (interrupt with Ctrl-C; not on MSWin32)
  * LexEnv (e.g., my $a = zeros(10) works)
  * MultiLine::PPI (handles multiline input like perldl)
  * NiceSlice (PDL::NiceSlice works too!)
  * Packages (keeps track of current user package)
  * PDLCommands (perldl shell v1 convenience routines)
  * ReadLineHistory
    * Save and restore command history to file
  * CompletionDrivers
    * Globals  (completion for globals) 
    * INC      (completion for use module::name)
    * Keywords (completion for perl keywords)
    * LexEnv   (completion for lexical vars)
    * Methods  (completion of method names)

 Default PDL modules loaded:
  * PDL
  * PDL::Dbg
  * PDL::Doc::Perldl
  * PDL::IO::Dumper
  * PDL::IO::FlexRaw
  * PDL::IO::Pic
  * PDL::Image2D
  * PDL::AutoLoader

 ? and ?? aliases for help and apropos now work
 
 Arguments to help|usage|apropos|sig|badinfo|demo are now autoquoted

 Shell escapes starting with $PERLDL::ESCAPE as the first character
 of a line now work ('#' by default).

 l <num> prints the last num lines of history, default 20.

 p is an alias for print.

 demo as a command by itself lists the possible demos available.
 Otherwise it runs the specified demo.

 The Perldl2 shell, pdl2, loads/saves from the same history
 file as perldl.

 The Perldl2 shell, pdl2, loads your .perldlrc file
 from the same location as the perldl shell does.  It also
 accepts .pdlrc as the name---looking forward to the new
 naming scheme for the interactive shell.  A local.pdlrc
 or local.perldlrc are run if present as well.
